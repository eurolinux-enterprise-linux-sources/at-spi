<refentry id="at-spi-cspi-AccessibleHypertext-Interface">
<refmeta>
<refentrytitle role="top_of_page" id="at-spi-cspi-AccessibleHypertext-Interface.top_of_page">AccessibleHypertext Interface</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>AT-SPI-CSPI Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>AccessibleHypertext Interface</refname>
<refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv id="at-spi-cspi-AccessibleHypertext-Interface.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>
<link linkend="void">void</link>                <link linkend="AccessibleHypertext-ref">AccessibleHypertext_ref</link>             (<link linkend="AccessibleHypertext">AccessibleHypertext</link> *obj);
<link linkend="void">void</link>                <link linkend="AccessibleHypertext-unref">AccessibleHypertext_unref</link>           (<link linkend="AccessibleHypertext">AccessibleHypertext</link> *obj);
<link linkend="long">long</link>                <link linkend="AccessibleHypertext-getNLinks">AccessibleHypertext_getNLinks</link>       (<link linkend="AccessibleHypertext">AccessibleHypertext</link> *obj);
<link linkend="AccessibleHyperlink">AccessibleHyperlink</link> * <link linkend="AccessibleHypertext-getLink">AccessibleHypertext_getLink</link>       (<link linkend="AccessibleHypertext">AccessibleHypertext</link> *obj,
                                                         long <link linkend="int">int</link> linkIndex);
<link linkend="long">long</link>                <link linkend="AccessibleHypertext-getLinkIndex">AccessibleHypertext_getLinkIndex</link>    (<link linkend="AccessibleHypertext">AccessibleHypertext</link> *obj,
                                                         long <link linkend="int">int</link> characterOffset);
</synopsis>
</refsynopsisdiv>









<refsect1 id="at-spi-cspi-AccessibleHypertext-Interface.description" role="desc">
<title role="desc.title">Description</title>
<para>
</para>
</refsect1>

<refsect1 id="at-spi-cspi-AccessibleHypertext-Interface.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="AccessibleHypertext-ref" role="function">
<title>AccessibleHypertext_ref ()</title>
<indexterm zone="AccessibleHypertext-ref"><primary sortas="AccessibleHypertext_ref">AccessibleHypertext_ref</primary></indexterm><programlisting><link linkend="void">void</link>                AccessibleHypertext_ref             (<link linkend="AccessibleHypertext">AccessibleHypertext</link> *obj);</programlisting>
<para>
Increment the reference count for an <link linkend="AccessibleHypertext"><type>AccessibleHypertext</type></link> object.
      Since AccessibleHypertext is derived from AccessibleText,
      this is the same as <link linkend="AccessibleText-unref"><function>AccessibleText_unref()</function></link>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>obj</parameter>&#160;:</term>
<listitem><simpara> a pointer to the <link linkend="AccessibleHypertext"><type>AccessibleHypertext</type></link> object on which to operate.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="AccessibleHypertext-unref" role="function">
<title>AccessibleHypertext_unref ()</title>
<indexterm zone="AccessibleHypertext-unref"><primary sortas="AccessibleHypertext_unref">AccessibleHypertext_unref</primary></indexterm><programlisting><link linkend="void">void</link>                AccessibleHypertext_unref           (<link linkend="AccessibleHypertext">AccessibleHypertext</link> *obj);</programlisting>
<para>
Decrement the reference count for an <link linkend="AccessibleHypertext"><type>AccessibleHypertext</type></link> object.
      Since AccessibleHypertext is derived from AccessibleText,
      this is the same as <link linkend="AccessibleText-unref"><function>AccessibleText_unref()</function></link>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>obj</parameter>&#160;:</term>
<listitem><simpara> a pointer to the <link linkend="AccessibleHypertext"><type>AccessibleHypertext</type></link> object on which to operate.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="AccessibleHypertext-getNLinks" role="function">
<title>AccessibleHypertext_getNLinks ()</title>
<indexterm zone="AccessibleHypertext-getNLinks"><primary sortas="AccessibleHypertext_getNLinks">AccessibleHypertext_getNLinks</primary></indexterm><programlisting><link linkend="long">long</link>                AccessibleHypertext_getNLinks       (<link linkend="AccessibleHypertext">AccessibleHypertext</link> *obj);</programlisting>
<para>
Get the total number of <link linkend="AccessibleHyperlinks"><type>AccessibleHyperlinks</type></link> which an
       <link linkend="AccessibleHypertext"><type>AccessibleHypertext</type></link> implementor has.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>obj</parameter>&#160;:</term>
<listitem><simpara> a pointer to the <link linkend="AccessibleHypertext"><type>AccessibleHypertext</type></link> implementor on which to operate.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a <link linkend="long"><type>long</type></link> indicating the number of <link linkend="AccessibleHyperlinks"><type>AccessibleHyperlinks</type></link>
       of the <link linkend="AccessibleHypertext"><type>AccessibleHypertext</type></link> implementor, or -1 if
       the number cannot be determined (for example, if the
       <link linkend="AccessibleHypertext"><type>AccessibleHypertext</type></link> object is so large that it is not
       all currently in the memory cache).
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="AccessibleHypertext-getLink" role="function">
<title>AccessibleHypertext_getLink ()</title>
<indexterm zone="AccessibleHypertext-getLink"><primary sortas="AccessibleHypertext_getLink">AccessibleHypertext_getLink</primary></indexterm><programlisting><link linkend="AccessibleHyperlink">AccessibleHyperlink</link> * AccessibleHypertext_getLink       (<link linkend="AccessibleHypertext">AccessibleHypertext</link> *obj,
                                                         long <link linkend="int">int</link> linkIndex);</programlisting>
<para>
Get the <link linkend="AccessibleHyperlink"><type>AccessibleHyperlink</type></link> object at a specified index.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>obj</parameter>&#160;:</term>
<listitem><simpara> a pointer to the <link linkend="AccessibleHypertext"><type>AccessibleHypertext</type></link> implementor on which to operate.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>linkIndex</parameter>&#160;:</term>
<listitem><simpara> a (zero-index) long integer indicating which hyperlink to query.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the <link linkend="AccessibleHyperlink"><type>AccessibleHyperlink</type></link> object specified by <link linkend="linkIndex"><type>linkIndex</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="AccessibleHypertext-getLinkIndex" role="function">
<title>AccessibleHypertext_getLinkIndex ()</title>
<indexterm zone="AccessibleHypertext-getLinkIndex"><primary sortas="AccessibleHypertext_getLinkIndex">AccessibleHypertext_getLinkIndex</primary></indexterm><programlisting><link linkend="long">long</link>                AccessibleHypertext_getLinkIndex    (<link linkend="AccessibleHypertext">AccessibleHypertext</link> *obj,
                                                         long <link linkend="int">int</link> characterOffset);</programlisting>
<para>
Get the index of the <link linkend="AccessibleHyperlink"><type>AccessibleHyperlink</type></link> object at a specified
       character offset.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>obj</parameter>&#160;:</term>
<listitem><simpara> a pointer to the <link linkend="AccessibleHypertext"><type>AccessibleHypertext</type></link> implementor on which to operate.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>characterOffset</parameter>&#160;:</term>
<listitem><simpara> an integer specifying the character offset to query.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the linkIndex of the <link linkend="AccessibleHyperlink"><type>AccessibleHyperlink</type></link> active at
       character offset <parameter>characterOffset</parameter>, or -1 if there is
       no hyperlink at the specified character offset.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
